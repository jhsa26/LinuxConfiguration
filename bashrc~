# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# 设置终端名字的颜色，并且只显示当前目录
export PS1="[\[\033[01;31m\]\u\[\033[00m\]@\[\033[01;32m\]\h\[\033[00m\] \[\033[01;33m\]\W\[\033[00m\]]\[\033[01;34m\]$\[\033[00m\]"
# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
    alias rm='rm -i'
    alias  clc='clear'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

PATH=$PATH:/usr/bin:/lib:/bin:/opt:/usr/local/bin:usr/local/lib:/usr/local/MATLAB/R2012a/MATLAB_Compiler_Runtime/v717/


# LD_LIBRARY_PATH


export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/lib/x86_64-linux-gnu:/usr/lib32:/usr/lib64:/usr/local/lib
export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/home/hj/Downloads/RjMCMC_hujing_modify/RJMCMC_tomoDD/lib
#qhull
PATH=${PATH}:/usr/local/qhull-2015/bin
export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/qhull-2015/lib
# add MCR library path
export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/MATLAB/R2012a/MATLAB_Compiler_Runtime/v717/runtime/glnxa64:/usr/local/MATLAB/R2012a/MATLAB_Compiler_Runtime/v717/bin/glnxa64:/usr/local/MATLAB/R2012a/MATLAB_Compiler_Runtime/v717/sys/os/glnxa64:/usr/local/MATLAB/R2012a/MATLAB_Compiler_Runtime/v717/sys/java/jre/glnxa64/jre/lib/amd64/native_threads:/usr/local/MATLAB/R2012a/MATLAB_Compiler_Runtime/v717/sys/java/jre/glnxa64/jre/lib/amd64/server:/usr/local/MATLAB/R2012a/MATLAB_Compiler_Runtime/v717/sys/java/jre/glnxa64/jre/lib/amd64
# install sac
export SACHOME=/usr/local/sac

source ${SACHOME}/bin/sacinit.sh 
export SAC_DISPLAY_COPYRIGHT=0
export SAC_PPK_LARGE_CROSSHAIRS=1
export SAC_USE_DATABASE=0
# install sac_msc peng
export PATH=$PATH:/usr/local/sac_msc
# install taup
export TAUP_HOME=/usr/local/TauP-2.1.2
export PATH=$PATH:${TAUP_HOME}/bin
#GMT4.5
export GMT4HOME=/usr/local/GMT-4.5.15
export PATH=${GMT4HOME}/bin:$PATH
export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${GMT4HOME}/lib64
#GMT5.4
export GMT5HOME=/usr/local/GMT5.4
export PATH=${GMT5HOME}/bin:$PATH
export  LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${GMT5HOME}/lib64
#GMT5.4 command complete

# Use bash-completion, if available

if [ -r /usr/share/bash-completion/bash_completion ]; then
        . /usr/share/bash-completion/bash_completion
fi

    . ${GMT5HOME}/share/tools/gmt_completion.bash

#
export GST_ID3_TAG_ENCODING=GBK:UTF-8:GB18030 
export GST_ID3V2_TAG_ENCODING=GBK:UTF-8:GB18030
export PATH=$PATH:/usr/bin:/bin:/usr/local/:/usr/
#openmpi
export OPENMPI=/usr/local/openmpi
export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:$OPENMPI/lib
export PATH=$OPENMPI/bin:$PATH
#export OMP_NUM_THREADS=4
# install haroopad
export PATH=$PATH:/usr/local/haroopad_64/usr/share/haroopad/
# install wps
export PATH=$PATH:/usr/local/wps_a21_x86_64
# login server
alias hj_ssh='ssh -X hj@222.195.83.35'
export hj_id='hj@222.195.83.35'

## added by Anaconda3 2.3.0 installer
#export PATH="/home/hj/Software/anaconda3/bin:$PATH"
#pyenv
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
# 删除某个路径
#   echo ${path#/deletion_name:}
# added by Anaconda2 4.3.1 installer
export PATH="/home/hj/Software/anaconda2/bin:$PATH"
#tensflow
export TF_BINARY_URL=https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.10.0-cp27-none-linux_x86_64.whl
#chinese
#LANG="zh_CN.UTF-8"
#LANGUAGE="zh_CN:zh"
# english
LANG="en_US.UTF-8"
LANGUAGE="en_US:en"


# MATLAB command
alias mrun='matlab_2012 -nodesktop -nosplash -r' 

#Biseis
export BiseisBIN=/home/hj/Software/Biseis/bin
export BiseisSrcipts=/home/hj/Software/Biseis/scripts
export PATH=$PATH:/${BiseisBIN}:/${BiseisSrcipts}

#NODEjs
export PATH=$PATH:/usr/local/node/bin
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
[ -f ~/.fzf.bash ] && source ~/.fzf.bash
#ECLIPSE
export PATH=${PATH}:/home/hj/Software/eclipse/java/java-latest-released/eclipse

